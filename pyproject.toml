[project]
name = "transcription-services"
version = "0.1.0"
description = "Modular transcription services with pluggable providers"
readme = "README.md"
requires-python = ">=3.9"

dependencies = [
    "openai>=1.0.0",
    "dropbox>=12.0.0", 
    "google-cloud-secret-manager>=2.0.0",
    "google-cloud-storage>=2.0.0",
    "ffmpeg-python>=0.2.0",
    "PyJWT>=2.8.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "unittest-xml-reporting>=3.2.0",
    # API Testing
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.25.2",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    # Development tools
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
]

webhook = [
    "functions-framework==3.*",
    "google-cloud-run==0.*",
    "flask==2.*",
]

worker = [
    "google-cloud-secret-manager>=2.0.0",
    "google-cloud-storage>=2.0.0",
]

all = [
    "transcription-services[dev,webhook,worker]"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["services"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = [
    "services/config",
    "services/core",
    "services/storage",
    "services/transcription"
]
omit = [
    "tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "services/config/validator.py",
    "services/core/logging.py",
    "services/core/resilience.py",
    "services/orchestration/*",
    "services/webhook/*",
    "services/security/*",
    "services/storage/providers/gcs.py",
    "services/storage/providers/local.py",
]

[tool.coverage.report]
fail_under = 68
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod"
]

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]  # Line too long (handled by formatter)

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = [
    "dropbox.*",
    "ffmpeg.*", 
    "google.*",
    "openai.*"
]
ignore_missing_imports = true